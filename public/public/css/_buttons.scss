// round button size
@mixin roundBtn {
    width: $font-size-3;
    height: $font-size-3;
}

.btn,
button {
    @include killShadow();
    background-color: none;
    color: $color-3 !important;
    font-weight: bold;
    // scales button after hover
    &:hover,
    &:active,
    &.visited,
    &:focus {
      @include killShadow();
      color: $color-3 !important;
    }
    // scales button after hover
    &:hover.minus,
    &:active.minus,
    &.visited.minus,
    &:focus.minus,
    &:hover.plus,
    &:active.plus,
    &.visited.plus,
    &:focus.plus,
    &:hover.up,
    &:active.up,
    &.visited.up,
    &:focus.up,
    &:hover.down,
    &:active.down,
    &.visited.down,
    &:focus.down {
        @include killShadow();
        outline: none;
        opacity: 1;
    }
    // scale button on hover
    &.btn-outline-light:hover {
      color: $color-3 !important;
      transform: scale(1.05);
    }
    // change bg-color & color of button
    &.btn-outline-light:active {
      background-color: $color-3 !important;
      color: $color-1 !important;
      // change bg-color of button icons up & down
      &.down > span,
      &.up > span {
        background-color: $color-1 !important;
      }
    }
    // buttons plus & minus
    &.plus,
    &.minus {
      @include roundBtn();
      position: relative;
      & > span {
        width: $font-size-6;
        height: $border;
        position: absolute;
        left: (($font-size-3 - $font-size-6) / 2 - $border);
        top: ($font-size-3 / 2 - $border - $border / 2);
        background-color: $color-3;
        border-radius: $border;
      }
    }
    // change color of buttons lpus & minus
    &.plus {
      border-color: $color-success !important;
      & > span {
        background-color: $color-success !important;
      }
      &:active {
        background-color: $color-success !important;
        opacity: 1;
      }
      &:active > span {
        background-color: $color-1 !important;
      }
    }
    &.minus {
      border-color: $color-danger !important;
      & > span {
        background-color: $color-danger !important;
      }
      &:active {
        background-color: $color-danger !important;
        opacity: 1;
      }
      &:active > span {
        background-color: $color-1 !important;
      }
    }
    // plus bar
    &.plus > span:last-child {
      width: $border;
      height: $font-size-6;
      position: absolute;
      top: (($font-size-3 - $font-size-6) / 2 - $border);
      left: ($font-size-3 / 2 - ($border / 2 + $border));
      // background-color: $color-light;
      border-radius: $border;

    }
    // inverts button after click
    &.plus:active > span,
    &.minus:active > span {
      background-color: $color-1;
    }
    // button down
    &.down {
      @include roundBtn();
      padding: .3rem;
      // bars
      & > span {
        width: $border;
        height: $font-size-6 - .11rem;
        display: inline-block;
        background-color: $color-3;
        border-radius: $border;
        &:first-child {
          transform: rotate(-45deg);
          float: left;
        }
        &:last-child {
          transform: rotate(45deg);
          float: right;
        }
      }
    }
    // button up
    &.up {
      @include roundBtn();
      padding: 0 .3rem .12rem .3rem;
      // bars
      & > span {
        width: $border;
        height: $font-size-6 - .11rem;
        display: inline-block;
        background-color: $color-3;
        border-radius: $border;
        &:first-child {
          transform: rotate(45deg);
          float: left;
        }
        &:last-child {
          transform: rotate(-45deg);
          float: right;
        }
      }
    }
}